//------------------------------------------------------------------------------
// <auto-generated>
//    此代码由代码生成器生成。
//    手动更改此文件可能导致应用程序出现意外的行为。
//    如果重新生成代码，对此文件的任何修改都会丢失。
//    如果需要扩展此类：可遵守如下规则进行扩展：
//      1.横向扩展：如需添加额外的映射，可新建文件“ArticleEntitiesConfiguration.cs”的分部类“public partial class ArticleEntitiesConfiguration”}实现分部方法 EntityConfigurationAppend 进行扩展
// </auto-generated>
//
//  <copyright file="ArticleEntitiesConfiguration.generated.cs">
//      KaPai©2019 Microsoft Corporation. All rights reserved. 
//  </copyright>
//  <site></site>
//  <last-editor>KaPai</last-editor>
// -----------------------------------------------------------------------

using System;
using System.Collections.Generic;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

using OSharp.Entity;

using KaPai.Pay.Provide.Entities;
using KaPai.Pay.Identity.Entities;


namespace KaPai.Pay.EntityConfiguration.Provide
{
    /// <summary>
    /// 实体配置类：收款号列表信息
    /// </summary>
    public partial class ArticleEntitiesConfiguration : EntityTypeConfigurationBase<ArticleEntities, Guid>
    {
        /// <summary>
        /// 重写以实现实体类型各个属性的数据库配置
        /// </summary>
        /// <param name="builder">实体类型创建器</param>
        public override void Configure(EntityTypeBuilder<ArticleEntities> builder)
        {
            builder.HasOne<User>(m => m.User).WithMany().HasForeignKey(m => m.UserId).OnDelete(DeleteBehavior.Cascade);
            builder.HasOne<ArticleAssort>(m => m.ArticleAssort).WithMany().HasForeignKey(m => m.ArticleAssortId).OnDelete(DeleteBehavior.Cascade);

            EntityConfigurationAppend(builder);
        }

        /// <summary>
        /// 额外的数据映射
        /// </summary>
        partial void EntityConfigurationAppend(EntityTypeBuilder<ArticleEntities> builder);
    }
}

